version: '3'

services:
  app1:
    container_name: repl_1
    image: nikiforova-pr5:latest
    restart: on-failure
    environment:
      - NAME_APP=app1
    ports:
      - 8080:8080

  app2:
    container_name: repl_2
    image: nikiforova-pr5:latest
    restart: on-failure
    environment:
      - NAME_APP=app2


  app3:
    container_name: repl_3
    image: nikiforova-pr5:latest
    restart: on-failure
    environment:
      - NAME_APP=app3

  app4:
    container_name: repl_4
    image: nikiforova-pr5:latest
    restart: on-failure
    environment:
      - NAME_APP=app4

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf

##version: '3.9'
##
##services:
##  java_app:
##    container_name: java_app
##    image: francescoxx/java_app:1.0.0
##    build: .
##    ports:
##      - 8080:8080
##    environment:
##      - DATABASE_URL=jdbc:postgresql://java_db:5432/postgres
##      - DATABASE_USERNAME=postgres
##      - DATABASE_PASSWORD=postgres
##    depends_on:
##      - java_db
##
##  java_db:
##    container_name: java_db
##    image: postgres:12
##    ports:
##      - 5432:5432
##    environment:
##      POSTGRES_USER: postgres
##      POSTGRES_PASSWORD: postgres
##      POSTGRES_DB: postgres
##    volumes:
##      - pgdata:/var/lib/postgresql/data
##
##volumes:
##  pgdata: {}
#
#version: "3.9"
#
#services:
#  app1:
#    image: pr5-simple-app
#     image: evgenua/sem7-virt-documents:1.0
#     build:
#      	context: .
#      	dockerfile: Dockerfile
#    ports:
#      - 8080:8080
#    restart: on-failure
#    environment:
#      - NAME_APP=app1
#    volumes:
#      - ../upload-files:/upload-files
#  app2:
#    image: simple-app # build:
#    	context: .
#    	dockerfile: Dockerfile
#    restart: on-failure
#    ports:
#    	- 8081:8080
#    environment:
#      - NAME_APP=app2
#    volumes:
#      - ../upload-files:/upload-files
#  app3:
#    image: simple-app
#    build:
#      context: .
#      dockerfile: Dockerfile
#    restart: on-failure
#    ports:
#        - 8082:8080
#    environment:
#        - NAME_APP=app3
#    volumes:
#        - ../upload-files:/upload-files
#  app4:
#    image: simple-app
#    build:
#      context: .
#      dockerfile: Dockerfile
#    restart: on-failure
#    ports:
#        - 8082:8080
#    environment:
#        - NAME_APP=app4
#    volumes:
#        - ../upload-files:/upload-files
#  proxy:
#    image: nginx:1.11
#    ports:
#      - '80:80'
#    volumes:
#      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
#
#
